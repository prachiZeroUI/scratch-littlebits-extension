{
  "name": "Scratch-littlebits-extension",
  "tagline": "littleBits javascript extension for Scratch 2.0",
  "body": "<html>\r\n<head>\r\n  <title>Scratch littleBits Extension</title>\r\n  <script type=\"text/javascript\" src=\"js/jquery-1.11.3.min.js\"></script>\r\n  <script type=\"text/javascript\" src=\"js/main.js\"></script>\r\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"></link>\r\n</head>\r\n<body>\r\n\r\n<div id=\"header-container\">\r\n  <header>\r\n    <h1>Scratch littleBits Extension</h1>\r\n  </header>\r\n</div>\r\n\r\n<div id=\"content-container\">\r\n\r\n  <h1>Contents</h1>\r\n\r\n  <ul id=\"nav\">\r\n    <li><a href=\"#quickstart\">Quick Start</a></li>\r\n    <li><a href=\"#intro\">Introduction</a></li>\r\n    <li><a href=\"#equipment\">Equipment</a></li>\r\n    <li><a href=\"#getting-started\">Getting Started</a></li>\r\n    <li><a href=\"#blocks\">Scratch Blocks</a></li>\r\n    <li><a href=\"#examples\">Example Projects</a></li>\r\n  </ul>\r\n\r\n  <a name=\"quickstart\" />\r\n  <h1>Quick Start</h1>\r\n  <p>To use the extension, upload the <a href=\"http://khanning.github.io/scratch-littlebits-extension/littleBits_Scratch_Extension.ino\">littleBits_Scratch_Extension.ino</a> to your littleBits Arduino bit, install the <a href=\"http://scratch.mit.edu/scratchr2/static/ext/download.html\">Scratch Browser Plugin</a> (see notes below <a href=\"#firefox\">for Firefox</a> and <a href=\"#chrome\">for Chrome</a>), and then <a href=\"http://scratchx.org/?url=http://khanning.github.io/scratch-littlebits-extension/littlebits_extension.js\">open the littleBits extension on ScratchX.org</a>.</p>\r\n\r\n  <a name=\"intro\" />\r\n  <h1>Introduction</h1>\r\n\r\n  <p>This <a target=\"_new\" href=\"http://scratch.mit.edu\">Scratch</a> extension allows you to connect your Scratch projects to the physical world using <a target=\"_new\" href=\"http://littlebits.cc\">littleBits</a>. Using littleBits you can create new ways to interact with Scratch through the use of inputs and outputs. For example, you might rotate the Scratch cat by turning a dimmer, or make a buzzer go off when you score a point in your game. The possibilities are only limited by your imagination!</p>\r\n\r\n  <img width=\"600\" src=\"res/screenshot.png\" /><br /><em>Windmill simlulator using littleBits and Scratch.</em>\r\n\r\n  <a name=\"equipment\" />\r\n  <h1>Equipment</h1>\r\n\r\n  <h3>You will need:</h3>\r\n  <ul>\r\n    <li><a target=\"_new\" href=\"http://littlebits.cc/bits/arduino\">littleBits Arduino bit</a></li>\r\n    <li><a target=\"_new\" href=\"http://littlebits.cc/shop?filter=Power\">littleBits Power bit</a></li>\r\n    <li>Some littleBits <a target=\"_new\" href=\"http://littlebits.cc/shop?filter=Input\">Inputs</a> and <a target=\"_new\" href=\"http://littlebits.cc/shop?filter=Output\">Outputs</a></li>\r\n    <li>Micro USB Cable</li>\r\n  </ul>\r\n\r\n  <a name=\"getting-started\" />\r\n  <h1>Getting Started</h1>\r\n\r\n  <h3>Step 1 - Upload the Firmware</h3>\r\n  <div class=\"step\">\r\n    <a name=\"firmware-codebender\" />\r\n    <div class=\"toggle-header\" onclick=\"toggleDiv(this, '#firmware-codebender')\">\r\n      + Using codebender\r\n    </div>\r\n    <div class=\"toggle-div\" id=\"firmware-codebender\">\r\n      <ol>\r\n        <li>Install the codebender plugin:<br />On <b>Chrome/Chromium</b>, install the <a  href=\"https://chrome.google.com/webstore/detail/codebender-app/magknjdfniglanojbpadmpjlglepnlko\">codebender app</a> in the Chrome Web Store</a><br />On <b>Firefox</b>, install the <a href=\"https://codebender.cc/codebender.xpi\">codebender Add-on</a></li>\r\n        <li>(Windows only) install the <a href=\"https://codebender.cc/drivers/windows-driver-installer.zip\">device drivers</a></li>\r\n        <li>Connect a Power bit to one of the Arduino's input pins and turn on the Power bit.<br /><img width=200 src=\"res/power-connection.png\" /></li>\r\n        <li>Connect the Arduino to your computer's USB port<br /><img width=200 src=\"res/usb-connection.png\" /></li>\r\n        <li>Make sure the correct board (Arduino Leonardo) and serial port is selected in the codebender window below and click \"Run on Arduino\"</li>\r\n      </ol>\r\n      <p>On <b>Mac</b>, the serial number will be something like <b>/dev/tty.usbmodem-1511</b>.<br />On <b>Windows</b>, the serial number will probably be the highest-numbered COM port.<br />(Or unplug the Arduino, check the menu, and then replug your Arduino and see what new port appears.)\r\n\r\n      <iframe style=\"height: 510px; width: 100%; margin: 10px 0 10px;\" allowTransparency=\"true\" src=\"https://codebender.cc/embed/sketch:119499\" frameborder=\"0\"></iframe>\r\n    </div>\r\n\r\n    <a name=\"firmware-arduino\" />\r\n    <div class=\"toggle-header\" onclick=\"toggleDiv(this, '#firmware-arduino')\">\r\n      + Using the Arduino IDE\r\n    </div>\r\n    <div class=\"toggle-div\" id=\"firmware-arduino\">\r\n      <ol>\r\n        <li>Download and install the <a href=\"http://www.arduino.cc/en/Main/Software\">Arduino software</a> (<a href=\"http://www.arduino.cc/en/Guide/Windows\">Windows instructions</a>, <a href=\"http://www.arduino.cc/en/Guide/MacOSX\">Mac instructions</a>)</li>\r\n        <li>Connect a Power bit to one of the Arduino's input pins and turn on the Power bit.<br /><img width=200 src=\"res/power-connection.png\" /></li>\r\n        <li>Connect the Arduino to your computer's USB port<br /><img width=200 src=\"res/usb-connection.png\" /></li>\r\n        <li>Open the <a href=\"http://khanning.github.io/scratch-littlebits-extension/littleBits_Scratch_Extension.ino\">littleBits_Scratch_Extension.ino</a> firmware in the Arduino software<br /><img src=\"res/arduino.png\" /></li>\r\n        <li>Select Arduino Leonardo from the <b>Tools &gt; Board</b> menu<br /><img src=\"res/arduino-board.png\" /></li>\r\n        <li>Select your serial port from the <b>Tools &gt; Port</b> menu.<br />On Mac, it's something like <b>/dev/tty.usbmodem-1511</b>.<br />On Windows, it's probably the highest-numbered COM port.<br />(Or unplug the Arduino, check the menu, and then replug your Arduino and see what new port appears.)<br /><img src=\"res/arduino-port.png\" /></li>\r\n        <li>Click the upload button<br /><img src=\"res/arduino-upload.png\" /></li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n\r\n  <h3>Step 2 - Install the Scratch Extensions Browser Plugin</h3>\r\n  <div class=\"step\">\r\n    Download and install the <a href=\"https://scratch.mit.edu/info/ext_download/\">Scratch Extensions Browser Plugin</a></li>\r\n  </div>\r\n\r\n  <h3>Step 3 - Load the littleBits extension on ScratchX</h3>\r\n  <div class=\"step\">\r\n    <p>Launch the extension by going to the following URL:</p>\r\n    <a target=\"_new\" href=\"http://scratchx.org/?url=http://khanning.github.io/scratch-littlebits-extension/littlebits_extension.js \">http://scratchx.org/?url=http://khanning.github.io/scratch-littlebits-extension/littlebits_extension.js</a>\r\n    <p><a name=\"firefox\" />On <b>Firefox</b>, you might see \"Allow scratchx.org to run \"Scratch Device?\". Click \"Allow...\".<br /><img width=700 src=\"res/firefox-plugin.png\" /></p>\r\n    <p>You might see another message, \"Allow scratchx.org to run plugins?\". Set both Adobe Flash and Scratch Device to \"Allow and Remember\" and click okay.<br /><img src=\"res/firefox-plugin2.png\" /></p>\r\n    <p><a name=\"chrome\" />On <b>Chrome</b>, you'll need to enable NPAPI plugins. Go to <a href=\"chrome://flags/#enable-npapi\">chrome://flags/#enable-npapi</a> and click enable:<br /><img src=\"res/chrome-npapi.png\" /></p>\r\n    <p>Then, click \"Relaunch Now\" button:<br /><img src=\"res/chrome-npapi3.png\" /></p>\r\n    <p>Then, when you go to ScratchX.org, you should see a puzzle piece icon with an X on it: <img src=\"res/chrome-plugin-broken.png\" width=\"25\" />. Click on it and select \"Always allow plug-ins on scratchx.org\":<br /><img src=\"res/chrome-plugin-enable.png\" /></p>\r\n    <p>When you see the indicator light in the \"More Blocks\" tab turn green your ready to start using the extension!</p>\r\n    <img width=200 src=\"res/connected.png\" alt=\"Green indicator light\" />\r\n  </div>\r\n\r\n  <h3>Step 4 - Have fun and be creative!</h3>\r\n  <div class=\"step\">\r\n    <h4>A Few Additional Notes:</h4>\r\n    <p>Some of the input bits need to have power going through them. The <a target=\"_new\" href=\"http://littlebits.cc/bits/fork\">Fork bit</a> is very useful for running power to multiple inputs.</p>\r\n    <p>If the Arduino bit loses it's connection to the Power bit you will have to wait a few seconds while it reconnects itself with Scratch. The littleBits <a target=\"_new\" href=\"http://littlebits.cc/accessories/mounting-board\">Mounting Boards</a> or these <a target=\"_new\" href=\"http://www.thingiverse.com/thing:727647\">3D printed littleBits sandals</a> are very useful for keeping everything connected.</p>\r\n    <p>Now take a look at the <a href=\"#blocks\">Scratch Blocks</a> and the <a href=\"#examples\">example projects</a> to learn how to use the extension.\r\n  </div>\r\n\r\n  <a name=\"blocks\" />\r\n  <h1>Scratch Blocks</h1>\r\n  <p>This is a brief description of each of the Scratch blocks included with the littleBits extension.</p>\r\n  <br />\r\n\r\n  <div class=\"block\">\r\n  <img height=\"39\" src=\"res/blocks/writedigital.png\" />\r\n  <p>Sets one of the output pins (d1, d5, d7) to on (full power) or off (no power).</p>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"block\">\r\n  <img height=\"39\" src=\"res/blocks/writeanalog.png\" />\r\n  <p>Sets one of the PWM output pins (d5, d7) to a value between 0 - 255.<br />0 = no power.<br />255 = full power.</p>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"block\">\r\n  <img height=\"32\" src=\"res/blocks/readdigital.png\" />\r\n  <p>Boolean block that returns true if an input pin (d0, a0, a1) is on (receiving voltage greater than 3v) and false if the input pin is off (receiving voltage less than 3v).</p>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"block\">\r\n  <img height=\"32\" src=\"res/blocks/readanalog.png\" />\r\n  <p>Reads a value from an analog input pin (a0, a1).</p>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"block\">\r\n  <img height=\"52\" src=\"res/blocks/whendigital.png\" />\r\n  <p>Hat block that executes when an input pin is switched on (receiving a voltage greater than 3v) or off (receiving a voltage less than 3v).</p>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"block\">\r\n  <img height=\"52\" src=\"res/blocks/whenanalog.png\" />\r\n  <p>Hat block that executes when an input pin is greater than, less than, or equal to a specified number.</p>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"block\">\r\n  <img height=\"32\" src=\"res/blocks/map.png\" />\r\n  <p>Maps a value between two ranges of numbers.</p>\r\n  <p>This comes in handy when you're trying to use an input value (0 - 1023) to set an output value (0 - 255)</p>\r\n  </div>\r\n\r\n  <a name=\"examples\" />\r\n  <h1>Example Projects</h1>\r\n\r\n  <p>These are some very basic examples of what you can do with the littleBits extension. More advanced examples will be posted soon.</p>\r\n\r\n  <dl>\r\n    <dt><a target=\"_new\" href=\"http://scratchx.org/?url=http://khanning.github.io/scratch-littlebits-extension/examples/littleBits%20-%20Move%20with%20Dimmer.sbx\">Move with Dimmer</a></dt>\r\n    <dd>Move a sprite on the screen using a dimmer input</dd>\r\n    <br />\r\n    <dt><a target=\"_new\" href=\"http://scratchx.org/?url=http://khanning.github.io/scratch-littlebits-extension/examples/littleBits%20-%20Output%20from%20Input.sbx\">Output from Input</a></dt>\r\n    <dd>Use an analog input to write a value to an analog output.</dd>\r\n    <br />\r\n    <dt><a target=\"_new\" href=\"http://scratchx.org/?url=http://khanning.github.io/scratch-littlebits-extension/examples/littleBits%20-%20Button%20Say%20Something.sbx\">Button Say Something</a></dt>\r\n    <dd>Make the sprite say something whenever the button input is pressed.</dd>\r\n    <br />\r\n  </dl>\r\n  \r\n</div>\r\n\r\n<br />\r\n\r\n</body>\r\n</html>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}